"""
Django settings for redbank project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""
from urllib.parse import urlparse

import os
from os import environ
from django.core.urlresolvers import reverse_lazy

ON_HEROKU = environ.get('ON_HEROKU')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

ALLOWED_HOSTS = ['*']

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.humanize',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.twitter',
    'compressor',
    'crispy_forms',
    'easy_maps',
    'rest_framework',
    'rest_framework_swagger',
    'storages',

    'accounts',
    'aggregate',
    'bankifi',
    'bankinfo',
    'bankxero',
    'branch',
    'cashflow',
    'nordea',
    'obp_oauth',
    'rbs',
    'xero',
    'material'
]

MIDDLEWARE = [
    'htmlmin.middleware.HtmlMinifyMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bankifi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bankifi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
        'default': {
            'ENGINE':'django.db.backends.postgresql_psycopg2',
            'NAME': 'bankifi',
            'USER': 'kmarritt',
            'PASSWORD': '',
            'HOST': '',
            'PORT': '',
        }
    }


redis_url = urlparse(os.environ.get('REDIS_URL', 'redis://localhost:6379/0'))
CACHES = {
    "default": {
       "BACKEND": "redis_cache.RedisCache",
         "LOCATION": "{0}:{1}".format(redis_url.hostname, redis_url.port),
         "OPTIONS": {
             "PASSWORD": redis_url.password,
             "DB": 0,
        }
    },
    "redis-cache": {
        "BACKEND": "redis_cache.RedisCache",
         "LOCATION": "{0}:{1}".format(redis_url.hostname, redis_url.port),
         "OPTIONS": {
             "PASSWORD": redis_url.password,
             "DB": 0,
        }
    },
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

ACCOUNT_AUTHENTICATION_METHOD="username_email"
ACCOUNT_EMAIL_REQUIRED=True
ACCOUNT_UNIQUE_EMAIL=True
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS=7
ACCOUNT_EMAIL_VERIFICATION="mandatory"
# Disable this config as per Aarons suggestion to solve
# "Reverse for 'home' not found" error. 2017-11-28.
#LOGIN_REDIRECT_URL=reverse_lazy('home')
LOGIN_URL=reverse_lazy('account_login')
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL="/"

#  Set Up Send Grid For Email
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.sendgrid.com'
EMAIL_PORT = 587

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/
LANGUAGE_CODE = 'en-gb'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ('%(asctime)s [%(process)d] [%(levelname)s] ' +
                       'pathname=%(pathname)s lineno=%(lineno)s ' +
                       'funcname=%(funcName)s %(message)s'),
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        }
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'infologger': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        'prodlogger': {
            'handlers': ['console'],
            'level': 'ERROR',
        }
    }
}

CRISPY_TEMPLATE_PACK = 'bootstrap4'

STATIC_URL = "https://d2ui9uexmw6t07.cloudfront.net/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "asset_storage"),
)

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)

COMPRESS_ENABLED = True
COMPRESS_CSS_HASHING_METHOD = 'content'
COMPRESS_CSS_FILTERS = [
    "compressor.filters.css_default.CssAbsoluteFilter",
    "compressor.filters.cssmin.CSSMinFilter"
]

HTML_MINIFY = True
KEEP_COMMENTS_ON_MINIFYING = True

# Setup AWS
AWS_HEADERS = {  # see http://developer.yahoo.com/performance/rules.html#expires
        'Expires': 'Thu, 31 Dec 2099 20:00:00 GMT',
        'Cache-Control': 'max-age=94608000',
    }
AWS_S3_CUSTOM_DOMAIN = 'd2ui9uexmw6t07.cloudfront.net'
AWS_QUERYSTRING_AUTH = False
COMPRESS_URL = STATIC_URL
AWS_S3_SECURE_URLS = True

COMPRESS_STORAGE = 'bankifi.settings.storage.CachedS3BotoStorage'
STATICFILES_STORAGE = 'bankifi.settings.storage.StaticToS3Storage'

AWS_IS_GZIPPED = True
GZIP_CONTENT_TYPES = (
   'text/css',
   'application/javascript',
   'application/x-javascript',
   'text/javascript',
   'application/vnd.ms-fontobject',
   'application/font-sfnt',
   'application/font-woff',
)

# HEROKU SETUP
# Update database configuration with $DATABASE_URL.
import dj_database_url
db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

# Open Banking Project Sandbox
OBP_OAUTH_ROOT="https://psd2-api.openbankproject.com"
OBP_API_ROOT="https://psd2-api.openbankproject.com/obp/v2.1.0"
OAUTH_TOKEN_URL = OBP_OAUTH_ROOT + '/oauth/initiate'
OAUTH_AUTHORIZATION_URL = OBP_OAUTH_ROOT + '/oauth/authorize'
OAUTH_ACCESS_TOKEN_URL = OBP_OAUTH_ROOT + '/oauth/token'

# Nordea Keys
NORDEA_AUTH_TOKEN = 'authenticated-user-full-access'
NORDEA_API_ROOT = 'http://api.nordeaopenbanking.com/v1'

# RBS Keys
RBS_API_ROOT = 'https://bluebank.azure-api.net/api/v0.7'

# Xero Keys
BANKIFI_ROOT = os.getenv('BANKIFI_ROOT', 'https://demo.bankifi.com')
if ON_HEROKU:
    OAUTH_CALLBACK_URI = BANKIFI_ROOT + '/oauth/authorize'
    XERO_CALLBACK_URI = BANKIFI_ROOT + '/cashflow/pobo/create'

else:
    OAUTH_CALLBACK_URI = 'http://127.0.0.1:8000/oauth/authorize'
    XERO_CALLBACK_URI = 'http://127.0.0.1:8000/cashflow/authorize'

XERO_OAUTH_ROOT="https://api.xero.com"
XERO_API_ROOT="https://psd2-api.openbankproject.com/obp/v2.1.0"
XERO_TOKEN_URL = XERO_OAUTH_ROOT + '/oauth/RequestToken'
XERO_AUTHORIZATION_URL = XERO_OAUTH_ROOT + '/oauth/Authorize'
XERO_ACCESS_TOKEN_URL = XERO_OAUTH_ROOT + '/oauth/AccessToken'
XERO_ENDPOINT_URL = XERO_OAUTH_ROOT + "/api.xro/2.0/"
